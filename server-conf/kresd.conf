modules = {
        'policy',
	--'hints > iterate',
	'daf'
}
-- modules.unload('hints')
modules.unload('priming')
modules.unload('ta_sentinel')
modules.unload('ta_signal_query')
-- modules.unload('cache')
modules.unload('detect_time_jump')
modules.unload('detect_time_skew')


net.tls('/etc/letsencrypt/live/dns.jp.blahdns.com/fullchain.pem','/etc/letsencrypt/live/dns.jp.blahdns.com/privkey.pem')
net.listen('0.0.0.0', 53)
net.listen('::', 53)
net.listen('0.0.0.0', 853)
net.listen('::', 853)
	
-- Add a custom hint
-- hints['foo.bar'] = '127.0.0.1'

-- Disallow ANY queries
policy.add(function (req, query)
        if query.stype == kres.type.ANY then
                return policy.DROP
        end
end)

-- Enable DNSSEC validation
-- trust_anchors.add_file('/var/lib/unbound/root.key', true)

policy.add(policy.rpz(policy.DENY, '/etc/knot-resolver/rpz.blacklist'))

-- Block all queries with QNAME = example.com

-- daf.add 'qname = ads.twitter.com deny'

-- Prefetch learning (20-minute blocks over 24 hours)
-- predict.config(20, 72)

-- Cache size

cache.size = 100 * MB 
--cache.min_ttl(20)
--cache.max_ttl(1800)
--cache.clear()

-- OpenNIC
-- some IP's 163-172-168-171
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('bit')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('dns.opennic.glue')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('bbs')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('chan')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('cyb')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('dyn')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('fur')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('geek')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('gopher')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('indy')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('libre')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('neo')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('null')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('o')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('opennic.glue')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('oss')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('oz')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('pirate')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('parody')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('glue')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('baza')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('coin')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('emc')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('lib')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('ku')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('te')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('ti')}))
 policy.add(policy.suffix(policy.STUB('::1@57'), {todname('uu')}))

policy.add(policy.all(policy.FORWARD('127.0.0.1@54')))